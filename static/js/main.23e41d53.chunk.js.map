{"version":3,"sources":["components/Nav.jsx","components/Nationalities.jsx","components/Genders.jsx","components/RandomUserNat.jsx","components/RandomUserGender.jsx","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","navStyle","color","className","style","to","nationalitiesArr","Nationalities","map","nat","idx","genders","Genders","gen","RandomUserNat","match","useState","randomUsr","setRandomUsr","useEffect","fetchRandomUser","a","fetch","params","res","json","ranUser","results","user","name","title","first","last","gender","src","picture","large","alt","RandomUserGender","App","path","exact","component","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAyBeA,MAtBf,SAAaC,GACX,IAAMC,EAAW,CACfC,MAAO,SAET,OACE,8BACE,qBAAIC,UAAU,YAAd,UACE,6BACE,cAAC,IAAD,CAAMC,MAAOH,EAAUI,GAAG,iBAA1B,6BAIF,6BACE,cAAC,IAAD,CAAMD,MAAOH,EAAUI,GAAG,WAA1B,4BCbJC,EAAmB,CACvB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAmBaC,MAhBf,SAAuBP,GACrB,OACE,gCACE,+CAECM,EAAiBE,KAAI,SAACC,EAAKC,GAAN,OACpB,qBAAKP,UAAU,WAAf,SACE,6BACE,eAAC,IAAD,CAAME,GAAE,yBAAoBI,GAA5B,cAAqCA,EAArC,UAF2BC,UC1BjCC,EAAU,CAAC,SAAU,QAiBZC,MAff,WACE,OACE,gCACE,0CACCD,EAAQH,KAAI,SAACK,EAAKH,GAAN,OACX,qBAAeP,UAAU,WAAzB,SACE,6BACE,cAAC,IAAD,CAAME,GAAE,kBAAaQ,GAArB,SAA6BA,OAFvBH,U,gCCwBHI,MAhCf,YAAmC,IAAVC,EAAS,EAATA,MACvB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAe,uCAAG,8BAAAC,EAAA,sEACJC,MAAM,kCAAD,OACaP,EAAMQ,OAAOd,MAF3B,cAChBe,EADgB,gBAIAA,EAAIC,OAJJ,OAIhBC,EAJgB,OAMtBR,EAAaQ,EAAQC,SANC,2CAAH,qDASrB,OACE,gCACE,+DAAkCZ,EAAMQ,OAAOd,OAC9CQ,EAAUT,KAAI,SAACoB,EAAMlB,GAAP,OACb,eAAC,WAAD,WACE,6BACGkB,EAAKC,KAAKC,MAAQ,IAAMF,EAAKC,KAAKE,MAAQ,IAAMH,EAAKC,KAAKG,OAE7D,0CAAaJ,EAAKK,OAAlB,OACA,qBAAKC,IAAKN,EAAKO,QAAQC,MAAOC,IAAI,OALrB3B,U,OCYR4B,MAhCf,YAAsC,IAAVvB,EAAS,EAATA,MAC1B,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAe,uCAAG,8BAAAC,EAAA,sEACJC,MAAM,qCAAD,OACgBP,EAAMQ,OAAOV,MAF9B,cAChBW,EADgB,gBAIAA,EAAIC,OAJJ,OAIhBC,EAJgB,OAMtBR,EAAaQ,EAAQC,SANC,2CAAH,qDASrB,OACE,gCACE,wDAA2BZ,EAAMQ,OAAOV,OACvCI,EAAUT,KAAI,SAACoB,EAAMlB,GAAP,OACb,eAAC,WAAD,WACE,6BACGkB,EAAKC,KAAKC,MAAQ,IAAMF,EAAKC,KAAKE,MAAQ,IAAMH,EAAKC,KAAKG,OAE7D,yCAAYJ,EAAKnB,IAAjB,OACA,qBAAKyB,IAAKN,EAAKO,QAAQC,MAAOC,IAAI,OALrB3B,UCSR6B,MAlBf,WACE,OACE,sBAAKpC,UAAU,MAAf,UACE,oBAAIA,UAAU,cAAd,sCACA,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqC,KAAM,iBAAkBC,OAAK,EAACC,UAAWnC,IAChD,cAAC,IAAD,CAAOiC,KAAM,WAAYE,UAAW9B,IACpC,cAAC,IAAD,CAAO4B,KAAM,eAAgBE,UAAWJ,IACxC,cAAC,IAAD,CAAOE,KAAM,sBAAuBE,UAAW5B,IAC/C,cAAC,IAAD,CAAU6B,KAAK,IAAItC,GAAG,6BCZjBuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.23e41d53.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav(props) {\n  const navStyle = {\n    color: \"white\",\n  };\n  return (\n    <nav>\n      <ul className=\"nav-links\">\n        <li>\n          <Link style={navStyle} to=\"/nationalities\">\n            Nationalities\n          </Link>\n        </li>\n        <li>\n          <Link style={navStyle} to=\"/genders\">\n            Gender\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst nationalitiesArr = [\n  \"AU\",\n  \"BR\",\n  \"CA\",\n  \"CH\",\n  \"DE\",\n  \"DK\",\n  \"ES\",\n  \"FI\",\n  \"FR\",\n  \"GB\",\n  \"IE\",\n  \"IR\",\n  \"NO\",\n  \"NL\",\n  \"NZ\",\n  \"TR\",\n  \"US\",\n];\n\nfunction Nationalities(props) {\n  return (\n    <div>\n      <h1>Nationalities</h1>\n\n      {nationalitiesArr.map((nat, idx) => (\n        <div className=\"nat-divs\" key={idx}>\n          <h4>\n            <Link to={`/nationalities/${nat}`}> {nat} </Link>\n          </h4>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Nationalities;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst genders = [\"female\", \"male\"];\n\nfunction Genders() {\n  return (\n    <div>\n      <h1> Genders</h1>\n      {genders.map((gen, idx) => (\n        <div key={idx} className=\"nat-divs\">\n          <h1>\n            <Link to={`/gender/${gen}`}>{gen}</Link>\n          </h1>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Genders;\n","import React, { Fragment, useEffect, useState } from \"react\";\n\nfunction RandomUserNat({ match }) {\n  const [randomUsr, setRandomUsr] = useState([]);\n\n  useEffect(() => {\n    fetchRandomUser();\n  }, []);\n\n  const fetchRandomUser = async () => {\n    const res = await fetch(\n      `https://randomuser.me/api/?nat=${match.params.nat}`\n    );\n    const ranUser = await res.json();\n\n    setRandomUsr(ranUser.results);\n  };\n\n  return (\n    <div>\n      <h1>Random user of Nationalities {match.params.nat}</h1>\n      {randomUsr.map((user, idx) => (\n        <Fragment key={idx}>\n          <h5>\n            {user.name.title + \" \" + user.name.first + \" \" + user.name.last}\n          </h5>\n          <h5> Gender {user.gender} </h5>\n          <img src={user.picture.large} alt=\"\" />\n        </Fragment>\n      ))}\n    </div>\n  );\n}\n\nexport default RandomUserNat;\n","import React, { Fragment, useEffect, useState } from \"react\";\n\nfunction RandomUserGender({ match }) {\n  const [randomUsr, setRandomUsr] = useState([]);\n\n  useEffect(() => {\n    fetchRandomUser();\n  }, []);\n\n  const fetchRandomUser = async () => {\n    const res = await fetch(\n      `https://randomuser.me/api/?gender=${match.params.gen}`\n    );\n    const ranUser = await res.json();\n\n    setRandomUsr(ranUser.results);\n  };\n\n  return (\n    <div>\n      <h1>Random user of Gender {match.params.gen}</h1>\n      {randomUsr.map((user, idx) => (\n        <Fragment key={idx}>\n          <h5>\n            {user.name.title + \" \" + user.name.first + \" \" + user.name.last}\n          </h5>\n          <h5> Nat:- {user.nat} </h5>\n          <img src={user.picture.large} alt=\"\" />\n        </Fragment>\n      ))}\n    </div>\n  );\n}\n\nexport default RandomUserGender;\n","import \"./App.css\";\nimport Nav from \"./components/Nav\";\nimport Nationalities from \"./components/Nationalities\";\nimport Genders from \"./components/Genders\";\nimport RandomUserNat from \"./components/RandomUserNat\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport RandomUserGender from \"./components/RandomUserGender\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"main-header\">Genrate a random user by</h1>\n      <Router>\n        <Nav />\n        <Switch>\n          <Route path={\"/nationalities\"} exact component={Nationalities} />\n          <Route path={\"/genders\"} component={Genders} />\n          <Route path={\"/gender/:gen\"} component={RandomUserGender} />\n          <Route path={\"/nationalities/:nat\"} component={RandomUserNat} />\n          <Redirect from=\"/\" to=\"/nationalities\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}